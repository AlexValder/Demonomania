[gd_scene load_steps=10 format=2]

[ext_resource path="res://Scripts/Main.cs" type="Script" id=1]
[ext_resource path="res://Assets/Fonts/normal_font.tres" type="DynamicFont" id=2]
[ext_resource path="res://Assets/Fonts/bold_font.tres" type="DynamicFont" id=3]
[ext_resource path="res://Assets/Fonts/italic_font.tres" type="DynamicFont" id=4]
[ext_resource path="res://Assets/Fonts/bold_italic_font.tres" type="DynamicFont" id=5]

[sub_resource type="ProceduralSky" id=1]
texture_size = 0

[sub_resource type="Environment" id=2]
background_mode = 3
background_sky = SubResource( 1 )

[sub_resource type="GDScript" id=3]
script/source = "extends Camera

const STEP := 0.2
const THRESHOLD := 0.5

onready var _main := $\"../../\"
var screen_size := Vector2.ZERO

func _ready() -> void:
    if _main == null:
        push_error(\"Main not found\")
        get_tree().quit()

    screen_size = OS.window_size
    get_tree().root.connect(\"size_changed\", self, \"_on_viewport_size_changed\")


func _process(delta: float) -> void:
    if not self.current:
        return

#    if Input.is_action_just_pressed(\"map_center\"):
#        self.transform.origin.x = 0
#        self.transform.origin.y = 0
#        return

#    if Input.is_action_pressed(\"map_left\"):
#        var left = unproject_position(_main.get_LeftPosition())
#        if left.x < screen_size.x:
#            self.transform.origin.x -= STEP * Input.get_action_strength(\"map_left\")
#    elif Input.is_action_pressed(\"map_right\"):
#        var right = unproject_position(_main.get_RightPosition())
#        if right.x > 0:
#            self.transform.origin.x += STEP * Input.get_action_strength(\"map_right\")

#    if Input.is_action_pressed(\"map_up\"):
#        var up = unproject_position(_main.get_UpPosition())
#        if up.y < screen_size.y:
#            self.transform.origin.y += STEP * Input.get_action_strength(\"map_up\")
#    elif Input.is_action_pressed(\"map_down\"):
#        var down = unproject_position(_main.get_DownPosition())
#        if down.y > 0:
#            self.transform.origin.y -= STEP * Input.get_action_strength(\"map_down\")


func _on_viewport_size_changed():
    screen_size = OS.window_size
"

[sub_resource type="GDScript" id=4]
resource_local_to_scene = true
script/source = "extends Button

onready var _spin_box := $\"../SpinBox\" as SpinBox
onready var _main := $\"../../\" as Spatial


func _ready():
    if _spin_box == null:
        push_error(\"SpinBox not found\")
        get_tree().quit()

    if _main == null:
        push_error(\"Main not found\")
        get_tree().quit()


func _input(event: InputEvent) -> void:
    if event.is_action_released(\"create\"):
        _on_Button_button_up()
    elif event.is_action_released(\"debug_more_rooms\"):
        _spin_box.value += 1
    elif event.is_action_released(\"debug_less_rooms\"):
        _spin_box.value -= 1


func _on_Button_button_up():
    var value = _spin_box.value as int
    _main.CreateRooms(value)
"

[node name="Main" type="Spatial"]
script = ExtResource( 1 )

[node name="CamRoot" type="Spatial" parent="."]
transform = Transform( 0.453991, -0.472161, 0.755616, 0, 0.848047, 0.529919, -0.891007, -0.240578, 0.385005, 48, 32, 24 )

[node name="Camera" type="Camera" parent="CamRoot"]
cull_mask = 1
environment = SubResource( 2 )
projection = 1
current = true
size = 20.0
near = 10.0
far = 200.0
script = SubResource( 3 )

[node name="HBoxContainer" type="HBoxContainer" parent="."]
anchor_top = 0.99
anchor_right = 1.0
anchor_bottom = 0.99
margin_top = -24.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="HBoxContainer"]
margin_left = 413.0
margin_right = 532.0
margin_bottom = 24.0
text = "Generate Rooms"
script = SubResource( 4 )

[node name="SpinBox" type="SpinBox" parent="HBoxContainer"]
margin_left = 536.0
margin_right = 610.0
margin_bottom = 24.0
min_value = 1.0
max_value = 25.0
value = 1.0
align = 1

[node name="RichTextLabel" type="RichTextLabel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = 10.0
custom_fonts/bold_italics_font = ExtResource( 5 )
custom_fonts/italics_font = ExtResource( 4 )
custom_fonts/bold_font = ExtResource( 3 )
custom_fonts/normal_font = ExtResource( 2 )
bbcode_enabled = true
bbcode_text = "[b]Map movement[/b]: Arrow buttons | Right Stick
[b]Map generation[/b]: Enter | A button
[b]Center map[/b]: C | Right Stick Button
[b]Change room count[/b]: Mouse Scroll | Left Trigger & Right Trigger
[b]Exit[/b]: Esc | B Button"
text = "Map movement: Arrow buttons | Right Stick
Map generation: Enter | A button
Center map: C | Right Stick Button
Change room count: Mouse Scroll | Left Trigger & Right Trigger
Exit: Esc | B Button"
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.766078, 0.428696, -0.478899, 0, 0.74508, 0.666975, 0.642748, -0.510955, 0.57079, 0, 0, 0 )

[connection signal="button_up" from="HBoxContainer/Button" to="HBoxContainer/Button" method="_on_Button_button_up"]
