[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scripts/Main.cs" type="Script" id=1]
[ext_resource path="res://Assets/MeshLibraries/maze.meshlib" type="MeshLibrary" id=6]

[sub_resource type="GDScript" id=4]
resource_local_to_scene = true
script/source = "extends Button

onready var _seed := $\"../SeedInput\" as LineEdit
onready var _algo := $\"../AlgoOptionButton\" as OptionButton
onready var _spin_box := $\"../SpinBox\" as SpinBox
onready var _red := $\"../RedSpinBox\" as SpinBox
onready var _green := $\"../GreenSpinBox\" as SpinBox
onready var _blue := $\"../BlueSpinBox\" as SpinBox
onready var _main := $\"../../\" as Spatial


func _ready() -> void:
    if _seed == null:
        push_error(\"SeedInput not found\")
        get_tree().quit()

    if _algo == null:
        push_error(\"AlgoOptionButton not found\")
        get_tree().quit()

    if _spin_box == null:
        push_error(\"SpinBox not found\")
        get_tree().quit()

    if _main == null:
        push_error(\"Main not found\")
        get_tree().quit()

    if _red == null:
        push_error(\"RedSpinBox not found\")
        get_tree().quit()

    if _green == null:
        push_error(\"GreenSpinBox not found\")
        get_tree().quit()

    if _blue == null:
        push_error(\"BlueSpinBox not found\")
        get_tree().quit()

func _on_Button_button_up() -> void:
    var algo := _algo.get_item_text(_algo.selected)
    var value := _spin_box.value as int
    var color := Color(
        _red.value / 256,
        _green.value / 256,
        _green.value / 256
    )
    _main.CreateRooms(value, algo, _seed.text, color)
"

[sub_resource type="ProceduralSky" id=1]
texture_size = 0

[sub_resource type="Environment" id=2]
background_mode = 3
background_sky = SubResource( 1 )

[sub_resource type="GDScript" id=3]
script/source = "extends Camera

const STEP := 0.2
const THRESHOLD := 0.5

onready var _main := $\"../../\"
var screen_size := Vector2.ZERO

func _ready() -> void:
    if _main == null:
        push_error(\"Main not found\")
        get_tree().quit()

    screen_size = OS.window_size
    get_tree().root.connect(\"size_changed\", self, \"_on_viewport_size_changed\")


func _process(delta: float) -> void:
    if not self.current:
        return

    if Input.is_action_just_pressed(\"map_center\"):
        self.transform.origin.x = 0
        self.transform.origin.y = 0
        return

    if Input.is_action_pressed(\"map_left\"):
        self.transform.origin.x -= STEP * Input.get_action_strength(\"map_left\")
    elif Input.is_action_pressed(\"map_right\"):
        self.transform.origin.x += STEP * Input.get_action_strength(\"map_right\")

    if Input.is_action_pressed(\"map_up\"):
        self.transform.origin.y += STEP * Input.get_action_strength(\"map_up\")
    elif Input.is_action_pressed(\"map_down\"):
        self.transform.origin.y -= STEP * Input.get_action_strength(\"map_down\")


func _on_viewport_size_changed() -> void:
    screen_size = OS.window_size
"

[node name="Main" type="Spatial"]
script = ExtResource( 1 )

[node name="Container" type="HBoxContainer" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -24.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SeedInput" type="LineEdit" parent="Container"]
margin_left = 160.0
margin_right = 260.0
margin_bottom = 24.0
rect_min_size = Vector2( 100, 0 )
align = 1
placeholder_text = "Seed"

[node name="AlgoOptionButton" type="OptionButton" parent="Container"]
margin_left = 264.0
margin_right = 374.0
margin_bottom = 24.0
rect_min_size = Vector2( 110, 24 )
text = "Randomized"
align = 1
items = [ "Randomized", null, false, 0, null, "Kruskal", null, false, 1, null ]
selected = 0

[node name="SpinBox" type="SpinBox" parent="Container"]
margin_left = 378.0
margin_right = 452.0
margin_bottom = 24.0
min_value = 1.0
max_value = 25.0
value = 1.0
align = 1

[node name="vs1" type="VSeparator" parent="Container"]
margin_left = 456.0
margin_right = 460.0
margin_bottom = 24.0

[node name="RedLabel" type="Label" parent="Container"]
margin_left = 464.0
margin_top = 5.0
margin_right = 472.0
margin_bottom = 19.0
text = "R"

[node name="RedSpinBox" type="SpinBox" parent="Container"]
margin_left = 476.0
margin_right = 550.0
margin_bottom = 24.0
min_value = 20.0
max_value = 255.0
value = 20.0
align = 1

[node name="GreenLabel" type="Label" parent="Container"]
margin_left = 554.0
margin_top = 5.0
margin_right = 564.0
margin_bottom = 19.0
text = "G"

[node name="GreenSpinBox" type="SpinBox" parent="Container"]
margin_left = 568.0
margin_right = 642.0
margin_bottom = 24.0
min_value = 20.0
max_value = 255.0
value = 170.0
align = 1

[node name="BlueLabel" type="Label" parent="Container"]
margin_left = 646.0
margin_top = 5.0
margin_right = 655.0
margin_bottom = 19.0
text = "B"

[node name="BlueSpinBox" type="SpinBox" parent="Container"]
margin_left = 659.0
margin_right = 733.0
margin_bottom = 24.0
min_value = 20.0
max_value = 255.0
value = 140.0
align = 1

[node name="vs2" type="VSeparator" parent="Container"]
margin_left = 737.0
margin_right = 741.0
margin_bottom = 24.0

[node name="Button" type="Button" parent="Container"]
margin_left = 745.0
margin_right = 864.0
margin_bottom = 24.0
text = "Generate Rooms"
script = SubResource( 4 )

[node name="CamRoot" type="Spatial" parent="."]
transform = Transform( 0.453991, -0.472161, 0.755616, 0, 0.848047, 0.529919, -0.891007, -0.240578, 0.385005, 96, 64, 48 )

[node name="Camera" type="Camera" parent="CamRoot"]
cull_mask = 1
environment = SubResource( 2 )
projection = 1
current = true
size = 20.0
near = 10.0
far = 200.0
script = SubResource( 3 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.974894, -0.148516, 0.165908, 0, 0.74508, 0.666975, -0.222671, -0.65023, 0.726374, 0, -8.30488, 0 )

[node name="GridMap" type="GridMap" parent="."]
mesh_library = ExtResource( 6 )
data = {
"cells": PoolIntArray(  )
}
__meta__ = {
"_editor_clip_": 0,
"_editor_floor_": Vector3( 0, 0, 0 )
}

[connection signal="button_up" from="Container/Button" to="Container/Button" method="_on_Button_button_up"]
